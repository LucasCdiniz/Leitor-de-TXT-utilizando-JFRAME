// CRIADO E DESENVOLVIDO POR:
// LUCAS CELESTINO DINIZ
// lucascelestino.diniz@gmail.com
/*
    Aplicação para realizar a importação, gravação e a leitura de um arquivo TXT
    Passando o caminho manualmente do local do arquivo para apresntar a
    mensagem 
*/

// PACOTE
package aps;

// IMPORTAÇÕES
import java.io.File;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas
 */
public class leitortxtjframe extends javax.swing.JFrame {

    /**
     * Creates new form leitortxtjframe
     */
    public leitortxtjframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnSalvar = new javax.swing.JButton();
        btnAbir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAreaDeTexto = new javax.swing.JTextArea();
        lblTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAbir.setText("Abrir");
        btnAbir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbirActionPerformed(evt);
            }
        });

        taAreaDeTexto.setColumns(20);
        taAreaDeTexto.setRows(5);
        jScrollPane1.setViewportView(taAreaDeTexto);

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblTitulo.setText("Leitor de TXT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(btnAbir))
                            .addComponent(lblTitulo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnAbir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        Salvar();
    }                                         

    private void btnAbirActionPerformed(java.awt.event.ActionEvent evt) {                                        
        Abrir();
    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(leitortxtjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(leitortxtjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(leitortxtjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(leitortxtjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new leitortxtjframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAbir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextArea taAreaDeTexto;
    // End of variables declaration                   

    
    
 // DECLARAÇÕES DAS IMPORTAÇÕES
 File arquivo;        // ARQUIVO
 BufferedReader br;  // LEITURA
 BufferedWriter bw; // ESCRITA
 FileReader fr;    // LEITOR DO ARQUIVO
 FileWriter fw;   // ESCRITOR DO ARQUIVO
       
// MÉTODO - COMO SALVAR NO ARQUIVO
public void Salvar(){
   String caminho = JOptionPane.showInputDialog("Digete o caminho do arquivo");
   arquivo = new File(caminho);
   
   //FAZER O ACESSO ARQUIVO
   try{// VAI TENTAR ACESSAR O ARQUIVO
       if(!arquivo.exists()){ // SE O ARQUIVO NÃO EXISTE
           arquivo.createNewFile(); // CRIA UM NOVO ARQUIVO
       }
       // INÍCIO - COLOCAR OS DADOS NO ARQUIVO DE TEXTO
       fw = new FileWriter(arquivo);
       bw = new BufferedWriter(fw);
       
       bw.write(taAreaDeTexto.getText()); // PEGA O CONTEÚDO QUE ESTÁ DENTRO DA ÁREA DE TEXTO
                                          // E SALVA NO ARQUIVO
       bw.close();
       fw.close();
       // FIM. 
       
   }catch(IOException ex){// CASO ALGO DE RUIM
       JOptionPane.showMessageDialog(null, ex.getMessage());
   }
   
}

// MÉTODO - COMO ABRIR O ARQUIVO
public void Abrir(){
  String caminho = JOptionPane.showInputDialog("Digete o caminho do arquivo");
  arquivo = new File(caminho);
  
   try{
        fr = new FileReader(arquivo);
        br = new BufferedReader(fr);
        
        String linhaLida = "";
        while(br.ready()){
            linhaLida = linhaLida + br.readLine();
        }
        
        taAreaDeTexto.setText(linhaLida);
        
        br.close();
        fr.close();
   }catch(IOException ex){
       
   }
}


}
